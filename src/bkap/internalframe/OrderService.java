/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.internalframe;

import bkap.daoimpl.ServiceDaoImp;
import bkap.entity.Service;
import bkap.hotel.MainFrame;
import bkap.utils.Constant;
import bkap.utils.Helper;
import java.awt.Checkbox;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import java.sql.ResultSet;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class OrderService extends javax.swing.JInternalFrame {
    
    Callback callback;
    
    public interface Callback{
        void doAddServiceOrderRoom(List<Service> listService);
    }

    /**
     * Contructor de callback
     */
    public OrderService(Callback callback) {
        this.callback = callback;
        initComponents();
        serviceDapImpl = new ServiceDaoImp();
        helper = new Helper();
        model2 = new DefaultListModel<>();
        listServiceAdd.setModel(model2);
        try {
            loadDataToListService();
        } catch (SQLException ex) {
            Logger.getLogger(OrderService.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Contructor de callback
     */
    
    List<Service> lstService;
    ServiceDaoImp serviceDapImpl;
    DefaultListModel<Service> dlm;
    Helper helper;
    DefaultListModel<Service> model2;
    /**
     * Creates new form OrderService
     */
    public OrderService() {
        initComponents();
        serviceDapImpl = new ServiceDaoImp();
        helper = new Helper();
        model2 = new DefaultListModel<>();
        listServiceAdd.setModel(model2);
        try {
            loadDataToListService();
        } catch (SQLException ex) {
            Logger.getLogger(OrderService.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    public void loadDataToListService() throws SQLException {
        dlm = new DefaultListModel<>();
        ResultSet rs = helper.loadDataIntoList(Constant.SQL_SELECT_SERVICE);
        while (rs.next()) {
            Service s = new Service(rs.getInt("Id"), rs.getString("Name"), rs.getFloat("Price"));
            dlm.addElement(s);
        }
        listService.setModel(dlm);
        listService.setSelectedIndex(1);
        listService.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JpanService = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listService = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listServiceAdd = new javax.swing.JList<>();
        btnAdd = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        btnAddService = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jScrollPane1.setViewportView(listService);

        jScrollPane2.setViewportView(listServiceAdd);

        btnAdd.setText(">>");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jToggleButton2.setText("<<");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        btnAddService.setText("ThÃªm");
        btnAddService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddServiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JpanServiceLayout = new javax.swing.GroupLayout(JpanService);
        JpanService.setLayout(JpanServiceLayout);
        JpanServiceLayout.setHorizontalGroup(
            JpanServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanServiceLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(JpanServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanServiceLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(JpanServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(JpanServiceLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnAddService, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        JpanServiceLayout.setVerticalGroup(
            JpanServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addGroup(JpanServiceLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnAdd)
                .addGap(48, 48, 48)
                .addComponent(jToggleButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(btnAddService)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JpanService, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JpanService, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        List<Service> value = listService.getSelectedValuesList();
        for (Service string : value) {
            model2.addElement(string);
            dlm.remove(listService.getSelectedIndex());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAddServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddServiceActionPerformed
        // TODO add your handling code here:
        List<Service> value = listServiceAdd.getSelectedValuesList();
//        for (String string : value) {
//            System.out.println("bkap.internalframe.OrderService.btnAddServiceActionPerformed()"+string);
//        }
        callback.doAddServiceOrderRoom(value);
    }//GEN-LAST:event_btnAddServiceActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        List<Service> value = listServiceAdd.getSelectedValuesList();
        for (Service string : value) {
            dlm.addElement(string);
            model2.remove(listServiceAdd.getSelectedIndex());
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JpanService;
    private javax.swing.JToggleButton btnAdd;
    private javax.swing.JButton btnAddService;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JList<Service> listService;
    private javax.swing.JList<Service> listServiceAdd;
    // End of variables declaration//GEN-END:variables
}
