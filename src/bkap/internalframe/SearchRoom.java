/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.internalframe;

import bkap.daoimpl.RoomDaoImpl;
import bkap.entity.Room;
import bkap.utils.Constant;
import bkap.utils.DialogThongBao;
import bkap.utils.Helper;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class SearchRoom extends javax.swing.JInternalFrame {
    DefaultTableModel dtmSearch;
    RoomDaoImpl roomDaoImpl;
    Helper helper;
    List<Room> lstRoomSearch;
    
    
    private Room_JIF room_JIF;
    
    CallbackRoom_JIF callbackRoom_JIF;
    
    public interface CallbackRoom_JIF{
        public void showRoom_JIF(int id);
    }
    
    /**
     * Creates new form SearchRoom
     */
    
    public SearchRoom(CallbackRoom_JIF callbackRoom_JIF) {
        this.callbackRoom_JIF = callbackRoom_JIF;
        initComponents();
        room_JIF = new Room_JIF();
        loaddata();
        cboLoaiPhongTK.setEnabled(false);
        cboTrangThaiTK.setEnabled(false);
        helper.loadDataIntoComboBox(cboLoaiPhongTK, Constant.SQL_SELECT_CATEGORYROOM, "Name");
        
    }
    
    public SearchRoom() {
        initComponents();
        room_JIF = new Room_JIF();
        loaddata();
        
    }
    
    private void loaddata() {
        helper = new Helper();
        roomDaoImpl = new RoomDaoImpl();
        LoadTable();
    }
    
    private void LoadTable() {
        String columnsName[] = {
            "Id", "Name", "Price/Day", "Acreage", "People", "Status", "CateRoom"
        };
        dtmSearch = new DefaultTableModel(columnsName,0);
        dtmSearch.getDataVector().removeAllElements();
        lstRoomSearch = roomDaoImpl.getAllRooms();
        for (int i = 0; i < lstRoomSearch.size(); i++) {
            Room r = lstRoomSearch.get(i);
            Vector row = new Vector<>();
            row.add(r.getId());
            row.add(r.getName());
            row.add(r.getPrice());
            row.add(r.getAcreage());
            row.add(r.getPeople());
            row.add((r.getStatus() == 1) ? "Hiện" : "Ẩn");
            try {
                row.add(helper.getFieldByField("category_room", "Name", "Id", r.getCategoryRoom()));
            } catch (SQLException ex) {
                Logger.getLogger(SearchRoom.class.getName()).log(Level.SEVERE, null, ex);
            }
            dtmSearch.addRow(row);
        }
        tblRoomSearch.setModel(dtmSearch);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jmiSua = new javax.swing.JMenuItem();
        jmiXoa = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        cboTieuChiTK = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        cboLoaiPhongTK = new javax.swing.JComboBox<>();
        cboTrangThaiTK = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoomSearch = new javax.swing.JTable();

        jmiSua.setText("Sửa");
        jmiSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSuaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmiSua);

        jmiXoa.setText("Xóa");
        jmiXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiXoaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmiXoa);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jButton1.setText("Bỏ lọc");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cboTieuChiTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Tiêu chí --", "Id", "Tên", "Loại Phòng", "Trạng Thái" }));
        cboTieuChiTK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTieuChiTKItemStateChanged(evt);
            }
        });
        cboTieuChiTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTieuChiTKActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        cboLoaiPhongTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Loại Phòng--" }));
        cboLoaiPhongTK.setName("loaiphongtk"); // NOI18N
        cboLoaiPhongTK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiPhongTKItemStateChanged(evt);
            }
        });

        cboTrangThaiTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Trạng Thái--", "Hiện", "Ẩn" }));
        cboTrangThaiTK.setName("trangthaitk"); // NOI18N
        cboTrangThaiTK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiTKItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboTieuChiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboLoaiPhongTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboTrangThaiTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cboTieuChiTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLoaiPhongTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTrangThaiTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        tblRoomSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRoomSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblRoomSearchMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoomSearch);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        room_JIF.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblRoomSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomSearchMouseReleased
        // TODO add your handling code here:
        jPopupMenu1.show(evt.getComponent(),evt.getX(),evt.getY());
    }//GEN-LAST:event_tblRoomSearchMouseReleased

    private void jmiXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiXoaActionPerformed
        // TODO add your handling code here:
        if(DialogThongBao.showAlert(this, Constant.MSG_XAC_NHAN_XOA, "hihi") == JOptionPane.OK_OPTION) {
            int id = Integer.parseInt(tblRoomSearch.getValueAt(tblRoomSearch.getSelectedRow(), 0).toString());
            int kq = roomDaoImpl.delete(id);
            if(kq > 0) {
                DialogThongBao.showSuccess(this, Constant.MSG_SUCCESS_DELETE, Constant.MSG_SUCCESS_DELETE);
            }
            loaddata();
        }
    }//GEN-LAST:event_jmiXoaActionPerformed

    private void jmiSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSuaActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(tblRoomSearch.getValueAt(tblRoomSearch.getSelectedRow(), 0).toString());
        callbackRoom_JIF.showRoom_JIF(id);
    }//GEN-LAST:event_jmiSuaActionPerformed

    private void cboTieuChiTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTieuChiTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTieuChiTKActionPerformed

    private void cboTieuChiTKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTieuChiTKItemStateChanged
        // TODO add your handling code here:
        if(cboTieuChiTK.getSelectedItem().equals("Loại Phòng")) {
            cboLoaiPhongTK.setEnabled(true);
            txtSearch.setText(null);
            txtSearch.setEnabled(false);
            cboTrangThaiTK.setEnabled(false);
        }else if(cboTieuChiTK.getSelectedItem().equals("Trạng Thái")){
            cboLoaiPhongTK.setEnabled(false);
            txtSearch.setText(null);
            txtSearch.setEnabled(false);
            cboTrangThaiTK.setEnabled(true);
        }else if(cboTieuChiTK.getSelectedItem().equals("-- Tiêu chí --")){
            cboLoaiPhongTK.setEnabled(false);
            txtSearch.setEnabled(true);
            cboTrangThaiTK.setEnabled(false);
        }else {
            cboLoaiPhongTK.setEnabled(false);
            cboLoaiPhongTK.setSelectedIndex(0);
            txtSearch.setEnabled(true);
            cboTrangThaiTK.setEnabled(false);
            cboTrangThaiTK.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cboTieuChiTKItemStateChanged

    private void searchLike(JTable jTable, String fieldwhere, String keyword) {
        String columnsName[] = {
            "Id", "Name", "Price/Day", "Acreage", "People", "Status", "CateRoom"
        };
        dtmSearch = new DefaultTableModel(columnsName,0);
        dtmSearch.getDataVector().removeAllElements();
        if(fieldwhere.equals("Id")) {
            lstRoomSearch = roomDaoImpl.searchByID(fieldwhere,keyword);
        }else if(fieldwhere.equals("Name")) {
            lstRoomSearch = roomDaoImpl.searchByName(fieldwhere,keyword);
        }
        
        for (int i = 0; i < lstRoomSearch.size(); i++) {
            Room r = lstRoomSearch.get(i);
            Vector row = new Vector<>();
            row.add(r.getId());
            row.add(r.getName());
            row.add(r.getPrice());
            row.add(r.getAcreage());
            row.add(r.getPeople());
            row.add((r.getStatus() == 1) ? "Hiện" : "Ẩn");
            try {
                row.add(helper.getFieldByField("category_room", "Name", "Id", r.getCategoryRoom()));
            } catch (SQLException ex) {
                Logger.getLogger(SearchRoom.class.getName()).log(Level.SEVERE, null, ex);
            }
            dtmSearch.addRow(row);
        }
        jTable.setModel(dtmSearch);
    }
    
    private void searchWhere(JTable tbl , Object whereValue, int check) {
        String columnsName[] = {
            "Id", "Name", "Price/Day", "Acreage", "People", "Status", "CateRoom"
        };
        dtmSearch = new DefaultTableModel(columnsName,0);
        dtmSearch.getDataVector().removeAllElements();
        if(check == 1){
            lstRoomSearch = roomDaoImpl.searchByCateRoom(whereValue);
        }else if(check == 2) {
            lstRoomSearch = roomDaoImpl.searchByStatus(whereValue);
        }
        
        for (int i = 0; i < lstRoomSearch.size(); i++) {
            Room r = lstRoomSearch.get(i);
            Vector row = new Vector<>();
            row.add(r.getId());
            row.add(r.getName());
            row.add(r.getPrice());
            row.add(r.getAcreage());
            row.add(r.getPeople());
            row.add((r.getStatus() == 1) ? "Hiện" : "Ẩn");
            try {
                row.add(helper.getFieldByField("category_room", "Name", "Id", r.getCategoryRoom()));
            } catch (SQLException ex) {
                Logger.getLogger(SearchRoom.class.getName()).log(Level.SEVERE, null, ex);
            }
            dtmSearch.addRow(row);
        }
        tbl.setModel(dtmSearch);
    }
    
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String tieuchi = cboTieuChiTK.getSelectedItem().toString();
        String keyword = txtSearch.getText();
        System.out.println("bkap.internalframe.SearchRoom.txtSearchKeyReleased()"+keyword);
        if(tieuchi.equals("Id")) {
            if(!keyword.isEmpty()) {
                searchLike(tblRoomSearch, "Id", keyword);
            }
        }else if(tieuchi.equals("Tên")) {
            if(!keyword.isEmpty()) {
                searchLike(tblRoomSearch, "Name", keyword);
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cboLoaiPhongTKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiPhongTKItemStateChanged
        // TODO add your handling code here:
        if(cboLoaiPhongTK.getSelectedIndex() != 0) {
            String name = cboLoaiPhongTK.getSelectedItem().toString();
            try {
                int Id = (int) helper.getFieldByFieldString("room", "Id", "Name", name);
                searchWhere(tblRoomSearch, Id, 1);
            } catch (SQLException ex) {
                Logger.getLogger(SearchRoom.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboLoaiPhongTKItemStateChanged

    private void cboTrangThaiTKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiTKItemStateChanged
        // TODO add your handling code here:
        if(cboTrangThaiTK.getSelectedIndex() != 0) {
            int Id = 0;
            String name = cboTrangThaiTK.getSelectedItem().toString();
            
            
            
                if(name == "Hiện") {
                    Id = 1;
                }else{
                    Id = 0;
                }
                searchWhere(tblRoomSearch, Id, 2);
            
        }
    }//GEN-LAST:event_cboTrangThaiTKItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboLoaiPhongTK;
    private javax.swing.JComboBox<String> cboTieuChiTK;
    private javax.swing.JComboBox<String> cboTrangThaiTK;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmiSua;
    private javax.swing.JMenuItem jmiXoa;
    private javax.swing.JTable tblRoomSearch;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
