/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.hotel;

import bkap.entity.Service;
import bkap.hotel.DangNhap;
import bkap.internalframe.AdvancedSearch_JIF;
import bkap.internalframe.CategoryRoom_JIF;
import bkap.internalframe.Department_JIF;
//import bkap.internalframe.DangNhap;
import bkap.internalframe.DoiMatKhau;
import bkap.internalframe.Infrastructure_JIF;
import bkap.internalframe.OrderRoom_JIF;
import bkap.internalframe.OrderService;
import bkap.internalframe.Room_JIF;
import bkap.internalframe.SearchRoom;
import bkap.internalframe.Service_JIF;
import bkap.internalframe.ShowAllRoom;
import bkap.internalframe.User;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;

/**
 *
 * @author admi
 */
public class MainFrame extends javax.swing.JFrame implements Room_JIF.CallbackSearch, SearchRoom.CallbackRoom_JIF,OrderRoom_JIF.Callback
,OrderService.Callback,ShowAllRoom.Callback{
    boolean isLogin = false; 
    public String user,pass;
    public static JDesktopPane actionJPanel;
    Room_JIF room_JIF;
    SearchRoom searchRoom;
    OrderRoom_JIF orderRoom_JIF;
    OrderService orderService;
    ShowAllRoom showAllRoom;
    AdvancedSearch_JIF advancedSearch_JIF;

    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        
        Login_Jdialog dangNhap = new Login_Jdialog(this, true);
        dangNhap.setVisible(true);
        if(dangNhap.isCheckDN() == true) {
            dangNhap.dispose();
            user = Login_Jdialog.txtTenDN.getText();
            pass = Login_Jdialog.txtMatKhau.getText();
            initComponents();
            this.setLocationRelativeTo(null);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
            setConfig();
            setTitle("Quản lý khách sạn - " + user);
            setRoleGUI(dangNhap.getLevel());
        }
    }

    public String getPass() {
        return pass;
    }

    public void setPass(String pass) {
        this.pass = pass;
    }
    
    private void setRoleGUI(int role) {
        if (role == 1) {
            // mCaiDat.setEnabled(true);
        } else if (role == 2) {
            jmiDichVu.setEnabled(false);
            jmiUser.setEnabled(false);
        }
    }
    
    public void setConfig(){
//        Xet toa do hien thi form o giua man hin 
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
    }
    
    private boolean checkOnly(JInternalFrame innerFrame) {
        JInternalFrame[] arrFrame = desktopPaneMain.getAllFrames();
        for (JInternalFrame frame : arrFrame) {
            if(frame.getClass().getName() == innerFrame.getClass().getName()) {
                return true;
            }
        }
        return false;
    }
    
    /**
     Hàm căn giữa Jinternalframe ra giữa màn hình
     */
    public void centerJIF(JInternalFrame jif) {
        Dimension desktopSize = desktopPaneMain.getSize();
        Dimension jInternalFrameSize = jif.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        jif.setLocation(width, height);
        jif.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        desktopPaneMain = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        mItemDoiMK = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmiUser = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmiDichVu = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BKAP - Phần mềm quản lý khách sạn");

        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/icons8-department-store-18.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator2);

        javax.swing.GroupLayout desktopPaneMainLayout = new javax.swing.GroupLayout(desktopPaneMain);
        desktopPaneMain.setLayout(desktopPaneMainLayout);
        desktopPaneMainLayout.setHorizontalGroup(
            desktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        desktopPaneMainLayout.setVerticalGroup(
            desktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 514, Short.MAX_VALUE)
        );

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/settings.png"))); // NOI18N
        jMenu2.setText("Tài khoản");

        mItemDoiMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/lock.png"))); // NOI18N
        mItemDoiMK.setText("Đổi mật khẩu");
        mItemDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemDoiMKActionPerformed(evt);
            }
        });
        jMenu2.add(mItemDoiMK);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/log-out-29775.jpg"))); // NOI18N
        jMenuItem1.setText("Đăng Xuất");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/exit.png"))); // NOI18N
        jMenuItem2.setText("Thoát");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Quản lý");

        jmiUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/nhanvien.png"))); // NOI18N
        jmiUser.setText("Nhân Viên");
        jmiUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUserActionPerformed(evt);
            }
        });
        jMenu1.add(jmiUser);

        jMenuItem5.setText("Danh Mục Phòng");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/icon/icons8-department-store-18.png"))); // NOI18N
        jMenuItem3.setText("Phòng Ban");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jmiDichVu.setText("Dịch Vụ");
        jmiDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDichVuActionPerformed(evt);
            }
        });
        jMenu1.add(jmiDichVu);

        jMenuItem4.setText("Cơ Sở Vật Chất");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Quản Lý Phòng");

        jMenuItem6.setText("Phòng");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("jMenuItem7");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
            .addComponent(desktopPaneMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPaneMain))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mItemDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemDoiMKActionPerformed
        // TODO add your handling code here:
        DoiMatKhau dmk = new DoiMatKhau();
        if(!checkOnly(dmk)) {
            centerJIF(dmk);
            desktopPaneMain.add(dmk);
        }
    }//GEN-LAST:event_mItemDoiMKActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
        MainFrame mainFrame = new MainFrame();
        mainFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUserActionPerformed
        // TODO add your handling code here:
        User user = new User();
        if(!checkOnly(user)) {
            centerJIF(user);
            desktopPaneMain.add(user);
        }
        
    }//GEN-LAST:event_jmiUserActionPerformed

    private void jmiDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDichVuActionPerformed
        // TODO add your handling code here:
        Service_JIF jInternalFrame = new Service_JIF();
        if(!checkOnly(jInternalFrame)) {
            centerJIF(jInternalFrame);
            desktopPaneMain.add(jInternalFrame);
        }
    }//GEN-LAST:event_jmiDichVuActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Department_JIF department = new Department_JIF();
        if(!checkOnly((department))) {
            centerJIF(department);
            desktopPaneMain.add(department);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        Infrastructure_JIF infrastructure_JIF = new Infrastructure_JIF();
        if(!checkOnly((infrastructure_JIF))) {
            centerJIF(infrastructure_JIF);
            desktopPaneMain.add(infrastructure_JIF);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        CategoryRoom_JIF categoryRoom_JIF = new CategoryRoom_JIF();
        if(!checkOnly((categoryRoom_JIF))) {
            centerJIF(categoryRoom_JIF);
            desktopPaneMain.add(categoryRoom_JIF);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        room_JIF = new Room_JIF(this);
        if(!checkOnly(room_JIF)) {
            centerJIF(room_JIF);
            desktopPaneMain.add(room_JIF);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        SearchRoom searchRoom = new SearchRoom();
        if(!checkOnly(searchRoom)) {
            centerJIF(searchRoom);
            desktopPaneMain.add(searchRoom);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        orderRoom_JIF = new OrderRoom_JIF(this);
        if(!checkOnly(orderRoom_JIF)) {
            centerJIF(orderRoom_JIF);
            desktopPaneMain.add(orderRoom_JIF);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
//                MainFrame trangchu = new MainFrame();
//
//                Runnable sh = new Runnable() {
//                    @Override
//                    public void run() {
//                        try {
//                            Thread.sleep(1000);
//                            // Hiển thị dialog đăng nhập
//                            trangchu.showLogin();
//                        } catch (InterruptedException ex) {
//                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    }
//                };
//                Thread task = new Thread(sh);
//                task.start();
//                trangchu.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPaneMain;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem jmiDichVu;
    private javax.swing.JMenuItem jmiUser;
    private javax.swing.JMenuItem mItemDoiMK;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionShowSearch() {
        SearchRoom searchRoom = new SearchRoom(this);
        if(!checkOnly(searchRoom)) {
            centerJIF(searchRoom);
            desktopPaneMain.add(searchRoom);
//            
        }
        
    }

    @Override
    public void showRoom_JIF(int id) {
//                room_JIF = new Room_JIF(this,id);
//        if(!checkOnly(room_JIF)) {
//            centerJIF(room_JIF);
//            desktopPaneMain.add(room_JIF);
//            System.out.println("bkap.hotel.MainFrame.showRoom_JIF()"+"dsds");
//        }else{
//            centerJIF(room_JIF);
//            desktopPaneMain.add(room_JIF);
//            room_JIF.toFront();
//            System.out.println("bkap.hotel.MainFrame.showRoom_JIF()"+"lol");
//        }
        room_JIF.LoadDataById(id);
//        room_JIF.toFront();
    }

    @Override
    public void doShowAddService() {
        orderService = new OrderService(this);
        if(!checkOnly(orderService)) {
            centerJIF(orderService);
            desktopPaneMain.add(orderService);   
            orderService.toFront();
        }else {
            
            orderService.toFront();
        }
    }

    @Override
    public void doAddServiceOrderRoom(List<Service> listService) {
        orderRoom_JIF.loadDataToTableService(listService);
        orderRoom_JIF.loadTongTienDichVu(listService);
        orderRoom_JIF.toFront();
    }

    @Override
    public void doShowAllRoom() {
        showAllRoom = new ShowAllRoom(this);
        if(!checkOnly(showAllRoom)) {
            centerJIF(showAllRoom);
            desktopPaneMain.add(showAllRoom);   
            showAllRoom.toFront();
        }
    }

    @Override
    public void doAddRoomToOrderRoom(int id) {
        orderRoom_JIF.loadInformationRoom(id);
        showAllRoom.toBack();
    }

    @Override
    public void doAdvancedSearch() {
        advancedSearch_JIF = new AdvancedSearch_JIF();
        if(!checkOnly(advancedSearch_JIF)) {
            centerJIF(advancedSearch_JIF);
            desktopPaneMain.add(advancedSearch_JIF);
            advancedSearch_JIF.toFront();
        }
    }
}
